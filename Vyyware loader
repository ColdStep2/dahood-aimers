do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (5==v0) then v15=function(v23,v24,...)local v25=1;local v26;v23=v5(v4(v23,5),"..",function(v37)if (v2(v37,2)==79) then v26=v1(v4(v37,1,1));return "";else local v74=0;local v75;while true do if (v74==0) then v75=v3(v1(v37,16));if v26 then local v93=0;local v94;while true do if (v93==1) then return v94;end if (v93==0) then v94=v6(v75,v26);v26=nil;v93=1;end end else return v75;end break;end end end end);local function v27(v38,v39,v40)if v40 then local v76=(v38/(((2532 -(933 + 292)) -(305 + 1000))^(v39-(2 -1))))%((3 -1)^(((v40-(3 -(1097 -(990 + 105)))) -(v39-1)) + (1 -0)));return v76-(v76%(1 + 0));else local v77=0;local v78;while true do if (v77==(306 -(183 + 123))) then v78=(2 -0)^(v39-(1 -(278 -(93 + 185))));return (((v38%(v78 + v78))>=v78) and (104 -((374 -(209 + 150)) + 88))) or 0;end end end end local function v28()local v45=930 -(218 + 712);local v46;while true do if (v45==(0 -(204 -(133 + 71)))) then v46=v2(v23,v25,v25);v25=v25 + 1 + 0;v45=4 -3;end if (v45==(2 -(1 + 0))) then return v46;end end end local function v29()local v47,v48=v2(v23,v25,v25 + (252 -(135 + 115)));v25=v25 + (9 -7);return (v48 * (555 -299)) + v47;end local function v30()local v49=657 -(276 + 381);local v50;local v51;local v52;local v53;while true do if (v49==(1 + 0)) then return (v53 * (8629129 + 3782964 + 4365123)) + (v52 * 65536) + (v51 * (162 + 94)) + v50;end if (0==v49) then v50,v51,v52,v53=v2(v23,v25,v25 + (10 -7));v25=v25 + 4;v49=1 + 0 + 0;end end end local function v31()local v54=1292 -(529 + 763);local v55;local v56;while true do if (v54==(0 + 0)) then v55=v30();v56=v30();v54=1 + 0;end if (v54==((22 + 691) -(426 + 104 + 182))) then return (( -((1 -0) + 1) * v27(v56,(259 -(14 + 6)) -(43 + 164))) + 1 + 0) * ((1 + 1)^(v27(v56,7 + 14,31) -1023)) * ((((v27(v56,1 + 0,1289 -(174 + 1095)) * ((1 + 1)^(12 + 20))) + v55)/((2 + 0)^(31 + 21))) + ((951 + 858) -(1138 + 670)));end end end local function v32(v41)local v57=0 -0;local v58;local v59;while true do if (v57==(3 -0)) then return v7(v59);end if (v57==0) then v58=nil;if  not v41 then local v84=0 -0;while true do if (v84==(0 + 0)) then v41=v30();if (v41==(0 -0)) then return "";end break;end end end v57=139 -(90 + 17 + 31);end if (v57==(3 -2)) then v58=v4(v23,v25,(v25 + v41) -(2 -1));v25=v25 + v41;v57=1626 -((2073 -(901 + 271)) + 723);end if (v57==(6 -4)) then v59={};for v82=1, #v58 do v59[v82]=v3(v2(v4(v58,v82,v82)));end v57=3;end end end local v33=v30;local function v34(...)return {...},v12("#",...);end local function v35()local v60=0;local v61;local v62;local v63;local v64;local v65;local v66;local v67;local v68;local v69;while true do if (v60==(7 -5)) then v65=nil;v66=nil;v60=3 + 0;end if (v60~=(0 -0)) then else v61=0 + 0;v62=nil;v60=1;end if (v60==4) then v69=nil;while true do if (v61==4) then while true do if (1==v62) then local v110=0;local v111;while true do if (v110~=0) then else v111=0 -0;while true do if (v111~=0) then else local v121=0;while true do if (v121~=0) then else v65=nil;v66=nil;v121=1;end if (v121==1) then v111=1;break;end end end if (v111~=(1783 -(1748 + 34))) then else v62=794 -(642 + 150);break;end end break;end end end if (v62~=2) then else local v112=0 + 0;while true do if (v112==(1 -0)) then v62=3;break;end if (v112==(884 -(551 + 333))) then v67=nil;v68=nil;v112=1272 -(132 + 1139);end end end if (v62==3) then v69=nil;while true do local v115=0;local v116;while true do if (0~=v115) then else v116=0;while true do if (v116==(3 -2)) then if (3==v63) then local v126=0;while true do local v129=0;while true do if (0==v129) then if (v126==0) then local v136=0;local v137;while true do if (v136==0) then v137=0;while true do if (v137==1) then v126=1 + 0;break;end if (0==v137) then local v259=0;while true do if (v259~=(782 -(299 + 482))) then else v137=1 + 0;break;end if (v259~=0) then else for v283=1,v30() do v65[v283-(1 + 0)]=v35();end for v285=1,v30() do v66[v285]=v30();end v259=1129 -(1052 + 76);end end end end break;end end end if (v126==(645 -(350 + 294))) then return v67;end break;end end end end if ((0 + 0)==v63) then local v127=0;local v128;while true do if (v127==(0 + 0)) then v128=0;while true do if (1==v128) then v66={};v63=1;break;end if (v128==(0 + 0)) then local v138=0 + 0;while true do if (v138==1) then v128=1;break;end if ((0 + 0)~=v138) then else v64={};v65={};v138=1 -0;end end end end break;end end end break;end if (v116==(0 -0)) then local v123=0;while true do if (v123==1) then v116=1 + 0;break;end if (v123==0) then if (v63==1) then local v130=0;local v131;while true do if (0==v130) then v131=0 -0;while true do if (0==v131) then v67={v64,v65,nil,v66};v68=v30();v131=897 -(282 + 614);end if (v131==1) then v69={};v63=2;break;end end break;end end end if (v63~=2) then else local v132=0;local v133;while true do if (v132~=0) then else v133=0 -0;while true do if (v133==0) then local v139=0 -0;local v140;while true do if (v139~=0) then else v140=0;while true do if (v140==1) then v133=1 + 0;break;end if (v140==(0 + 0)) then local v269=1214 -(802 + 412);while true do if ((2 -1)~=v269) then else v140=1 + 0;break;end if (v269==0) then for v338=1487 -(1022 + 464),v68 do local v339=0;local v340;local v341;local v342;local v343;while true do if (v339==(1270 -(195 + 1074))) then v342=nil;v343=nil;v339=1 + 1;end if (v339==(1740 -(346 + 1394))) then v340=490 -(181 + 309);v341=nil;v339=1;end if (v339==(1846 -(1053 + 791))) then while true do if (v340==(0 -0)) then local v390=77 -(10 + 67);while true do if (v390~=(1997 -(1218 + 778))) then else v340=1;break;end if (0~=v390) then else v341=0;v342=nil;v390=364 -(284 + 79);end end end if ((2 -1)==v340) then v343=nil;while true do if (v341==0) then local v407=0 -0;local v408;while true do if ((0 + 0)==v407) then v408=0 + 0;while true do if (v408==1) then v341=1921 -(1812 + 108);break;end if (v408==0) then local v442=0;while true do if (v442==0) then v342=v28();v343=nil;v442=1;end if (v442==(1 -0)) then v408=1;break;end end end end break;end end end if (v341==(1 -0)) then if (v342==1) then v343=v28()~=(0 + 0);elseif (v342==(1 + 1)) then v343=v31();elseif (v342==(3 -0)) then v343=v32();end v69[v338]=v343;break;end end break;end end break;end end end v67[3 + 0]=v28();v269=1;end end end end break;end end end if (v133~=(1 + 0)) then else for v176=1,v30() do local v177=0 -0;local v178;local v179;local v180;while true do if (v177~=(994 -(423 + 571))) then else v178=0 -0;v179=nil;v177=1 + 0;end if (v177==1) then v180=nil;while true do if (v178~=0) then else local v287=0;local v288;while true do if (v287==(0 + 0)) then v288=0;while true do if (v288==1) then v178=3 -2;break;end if (v288==0) then local v371=1923 -(166 + 1757);while true do if (v371==0) then v179=0;v180=nil;v371=1 + 0;end if (v371==(1 + 0)) then v288=1;break;end end end end break;end end end if (v178==1) then while true do if (v179==(0 -0)) then v180=v28();if (v27(v180,1,1 -0)==0) then local v363=0 -0;local v364;local v365;local v366;while true do if (v363~=3) then else if (v27(v365,6 -3,3)~=(1570 -(370 + 1199))) then else v366[2 + 2]=v69[v366[3 + 1]];end v64[v176]=v366;break;end if (v363~=(0 -0)) then else local v380=172 -(83 + 89);local v381;while true do if (v380==(0 -0)) then v381=0;while true do if (v381==(1946 -(1083 + 863))) then local v426=0;while true do if (v426==(1804 -(377 + 1427))) then v364=v27(v180,4 -2,1748 -(252 + 1493));v365=v27(v180,4,6 + 0);v426=1;end if (v426~=1) then else v381=1;break;end end end if ((1150 -(835 + 314))~=v381) then else v363=1;break;end end break;end end end if (v363==2) then local v382=0 + 0;while true do if (v382~=0) then else if (v27(v365,1 + 0,1612 -(771 + 840))==1) then v366[8 -6]=v69[v366[5 -3]];end if (v27(v365,2,2 + 0)==1) then v366[3]=v69[v366[3]];end v382=1;end if (v382==1) then v363=3 + 0;break;end end end if ((937 -(751 + 185))~=v363) then else local v383=128 -(15 + 113);while true do if (v383==(0 + 0)) then v366={v29(),v29(),nil,nil};if (v364==(0 -0)) then local v420=0;local v421;local v422;while true do if ((0 -0)==v420) then v421=0;v422=nil;v420=1 + 0;end if (v420==1) then while true do if (v421==0) then v422=0;while true do if (0==v422) then v366[3]=v29();v366[4]=v29();break;end end break;end end break;end end elseif (v364==(1457 -(1053 + 403))) then v366[2 + 1]=v30();elseif (v364==2) then v366[3]=v30() -(2^16);elseif (v364==3) then local v446=1717 -(1693 + 24);local v447;local v448;local v449;while true do if (v446==(0 -0)) then v447=0 + 0;v448=nil;v446=1;end if (v446~=1) then else v449=nil;while true do if (v447==0) then local v458=0;while true do if (v458~=(2 -1)) then else v447=1;break;end if (v458~=(0 + 0)) then else v448=505 -(459 + 46);v449=nil;v458=2 -1;end end end if (v447==1) then while true do if (v448~=(0 -0)) then else v449=1006 -(359 + 647);while true do if (v449~=(634 -(148 + 486))) then else v366[6 -3]=v30() -(2^(1593 -(377 + 1200)));v366[4]=v29();break;end end break;end end break;end end break;end end end v383=1;end if (v383~=1) then else v363=226 -(62 + 162);break;end end end end end break;end end break;end end break;end end end v63=3;break;end end break;end end end v123=1;end end end end break;end end end break;end if (0~=v62) then else local v113=0;local v114;while true do if (v113==(0 -0)) then v114=0 + 0;while true do if (v114~=(0 -0)) then else local v122=0 -0;while true do if (0~=v122) then else v63=0;v64=nil;v122=2 -1;end if (v122~=1) then else v114=1567 -(1002 + 564);break;end end end if (1==v114) then v62=1 -0;break;end end break;end end end end break;end if (v61==(7 -5)) then local v90=0 -0;while true do if ((580 -(197 + 382))==v90) then v61=3;break;end if (v90==0) then v66=nil;v67=nil;v90=1;end end end if (v61==(1525 -(288 + 1237))) then v62=0;v63=nil;v61=1 + 0;end if (v61~=(1861 -(1540 + 320))) then else local v91=0 + 0;while true do if (1~=v91) then else v61=2;break;end if (v91==(559 -(399 + 160))) then v64=nil;v65=nil;v91=2 -1;end end end if (v61==(3 -0)) then local v92=0;while true do if (v92~=(1863 -(296 + 1566))) then else v61=4;break;end if (v92~=(0 + 0)) then else v68=nil;v69=nil;v92=1759 -(1187 + 571);end end end end break;end if (v60==(2 + 1)) then v67=nil;v68=nil;v60=4;end if (v60==1) then v63=nil;v64=nil;v60=5 -3;end end end local function v36(v42,v43,v44)local v70=0;local v71;local v72;local v73;while true do if (v70==1) then v73=v42[3];return function(...)local v85=1;local v86= -1;local v87={...};local v88=v12("#",...) -1;local function v89()local v95=v71;local v96=v72;local v97=v73;local v98=v34;local v99={};local v100={};local v101={};for v106=(723 + 1056) -(886 + 893),v88 do if ((((2308 -(1208 + 611)) + 542)<=(3087 -((114 -73) + 15))) and (v106>=v97)) then v99[v106-v97]=v87[v106 + ((879 -(668 + 209)) -1)];else v101[v106]=v87[v106 + 1];end end local v102=(v88-v97) + (2 -1);local v103;local v104;while true do local v107=(0 + 0) -(0 -0);local v108;local v109;while true do if ((v107==(1195 -(356 + 838))) or ((3209 -(294 + 329))<=(1083 + 1281))) then while true do if ((v108==(0 -0)) or ((119 -(35 + 68))>=3865)) then v109=0;while true do if ((v109==(523 -(62 + 460))) or (((2119 -1062) + 3789)<(1122 -(22 + 251)))) then if ((588<994) and (v104<=(1434 -(697 + 714)))) then if (((3511 + 818)>=2045) and (v104<=(9 + 2))) then if ((v104<=5) or ((1399 + 1887)<=(4669 -(463 + 958)))) then if ((v104<=(1344 -(1090 + 252))) or ((4150 -3086)<=(207 + 546))) then if (((3692 -2473)<(5543 -2671)) and (v104<=(1537 -(817 + 534 + 186)))) then local v141=0 + 0;local v142;local v143;local v144;local v145;while true do if ((v141==(2 + 0)) or ((2886 -(1124 + 65))<=(334 + 259 + 62))) then while true do if ((v142==(3 -2)) or ((21884 -17377)<2262)) then local v270=(518 + 72) -(339 + 251);while true do if ((((3588 -(21 + 1838)) + 2841)>=(1192 -689)) and (v270==(1266 -(999 + 267)))) then v145=v101[v143] + v144;v101[v143]=v145;v270=(2106 -(540 + 81)) -(816 + 668);end if ((1==v270) or (((6931 -(906 + 639)) -3571)>=(2162 + 63 + 724))) then v142=4 -2;break;end end end if ((v142==(0 -0)) or (2309>=(3571 -(2862 -1647)))) then local v271=0 + 0;while true do if ((v271==(2 -1)) or (127>(3760 -1682))) then v142=1 + 0;break;end if ((v271==(0 + 0)) or ((4178 -(320 + 315))<=(4521 -(142 + 1269)))) then v143=v103[2];v144=v101[v143 + (310 -(15 + 293))];v271=944 -(116 + 827);end end end if ((v142==(1 + 0 + 1)) or (987>(6401 -5055))) then if ((v144>(804 -(256 + 548))) or (4274>=4574)) then if ((v145<=v101[v143 + (1312 -(42 + 1269))]) or ((3967 -(660 + 270))>=4834)) then local v344=1181 -(409 + 772);local v345;while true do if (((0 + 0)==v344) or (2038==546)) then v345=0;while true do if (((5137 -3300)==(8532 -6695)) and (v345==(0 + 0))) then v85=v103[1585 -(282 + 1300)];v101[v143 + 3]=v145;break;end end break;end end end elseif ((v145>=v101[v143 + ((883 -(265 + 30)) -(164 + 423))]) or ((2988 + 709)<(655 + 878))) then local v346=(676 + 1036) -(201 + (2021 -510));local v347;while true do if ((((748 -(228 + 398)) -((29 -22) + 17))<=(1543 -(538 + 519))) and (v346==(0 -0))) then v347=0 + 0;while true do if ((0==v347) or ((28 + 56)==(1545 -853))) then v85=v103[4 -(1027 -(816 + 210))];v101[v143 + (14 -11)]=v145;break;end end break;end end end break;end end break;end if ((1==v141) or (4644<=(951 + 2211))) then v144=nil;v145=nil;v141=2 -0;end if ((4993>(2194 -1622)) and (v141==(0 -0))) then v142=0 -0;v143=nil;v141=1;end end elseif (((4766 -2843)>=(1423 -(1134 + 288))) and (v104>(1946 -((6729 -4895) + (1773 -(390 + 1272)))))) then if (((4392 -((719 -(69 + 356)) + 185))>=(2805 -(436 + 492))) and (v103[2 + 0]==v101[v103[4]])) then v85=v85 + (2 -1);else v85=v103[12 -(2 + 7)];end else local v181=490 -(16 + 474);local v182;local v183;local v184;while true do if ((v181==(3 -2)) or ((7606 -4996)<=(1618 -606))) then v184=nil;while true do if (((4323 -(103 + 376))>1554) and ((0 + (819 -(363 + 456)))==v182)) then local v292=0 + 0;while true do if ((v292==(1636 -(169 + 1467))) or ((2073 + 497)<(2127 -(141 + 225)))) then v183=v103[2 -0];v184=v101[v183];v292=1;end if (((3 -(523 -(232 + 289)))==v292) or ((5447 -(198 + (3220 -1638)))<=(236 + 2328))) then v182=1408 -(1122 + 285);break;end end end if ((889<=((38 + 5348) -3657)) and ((1 + (0 -0))==v182)) then for v314=v183 + (123 -(28 + 94)),v86 do v8(v184,v101[v314]);end break;end end break;end if ((v181==(1106 -(1089 + 17))) or ((18169 -13461)<=(4421 -(670 + 546)))) then v182=1735 -(1311 + 424);v183=nil;v181=1;end end end elseif ((v104<=(1957 -(1072 + 882))) or (1506>=(11964 -8801))) then if ((v101[v103[2]]<v101[v103[4]]) or (2797>=(11768 -8405))) then v85=v85 + 1;else v85=v103[1972 -(1395 + (1827 -(1219 + 34)))];end elseif ((v104==(9 -5)) or ((1934 -(783 + 198))<208)) then v85=v103[3 + 0];else local v187=(101 + 189) -(54 + 236);local v188;local v189;local v190;while true do if ((v187==(2 -1)) or ((675 -(68 + 167))==(2558 -735))) then v190=nil;while true do if ((((2660 -1282) -(454 + 923))==v188) or (((2537 + 2140) -(947 + 640))<=1680)) then while true do if ((v189==(0 -0)) or (3183==(158 -83))) then v190=v103[2];do return v101[v190](v13(v101,v190 + 1,v86));end break;end end break;end if ((v188==(0 + (35 -(15 + 20)))) or ((925 -713)==108)) then local v293=758 -(51 + 707);while true do if ((((9821 -6619) -(756 + 1018))<=(5028 -((1268 -(947 + 59)) + (1414 -(51 + 2))))) and (((2349 -1562) -(722 + 65))==v293)) then v189=158 -(12 + 146);v190=nil;v293=1 + 0;end if (((1539 -(1415 + 123))==v293) or ((4460 -1279)>(20978 -16396))) then v188=1 + 0;break;end end end end break;end if ((v187==(0 + 0)) or (933<=(1539 -1110))) then v188=0 -0;v189=nil;v187=1 -0;end end end elseif (((1421 + 694)<=2125) and (v104<=(8 + 0))) then if ((v104<=(3 + 3)) or ((1138 + 2811)<(4728 -(780 + 32 + 26)))) then local v146=721 -(275 + 446);local v147;local v148;while true do if ((v146==(0 -0)) or ((1979 -1266)>(5482 -2243))) then v147=0 -0;v148=nil;v146=1 + 0 + 0;end if ((v146==(1318 -(606 + 711))) or (1082<=(89 + 341))) then while true do if ((4111<=4790) and (v147==0)) then v148=v103[1042 -(278 + 762)];v101[v148]=v101[v148](v101[v148 + 1]);break;end end break;end end elseif (((423 + 346)<(5881 -3291)) and (v104>(79 -(70 + 2)))) then v101[v103[450 -(288 + 160)]]=v101[v103[873 -(602 + 268)]][v103[3 + 1]];else local v193=0 + 0 + 0;local v194;local v195;while true do if ((v193==(1 + 0)) or (3267==(593 + 385))) then while true do if ((((8766 -(547 + 1200)) -4372)>=(907 -309)) and ((0 -0)==v194)) then local v294=0 -0;while true do if ((v294==(1 + 0)) or (4511==((16711 -11246) -(776 + 489)))) then v194=14 -(6 + 7);break;end if ((v294==((0 + 0) -0)) or ((9862 -6078)<=((6589 + 1820) -5844))) then v195=v103[2 + 0];v86=(v195 + v102) -(1 -(0 -0));v294=1791 -(880 + 910);end end end if ((4119>(1429 + 172 + 1319)) and (1==v194)) then for v315=v195,v86 do local v316=(0 -0) -0;local v317;local v318;while true do if ((v316==(727 -(127 + 599))) or ((4275 -(1421 + 207))>(600 + 2112))) then while true do if ((v317==(0 -0)) or ((10273 -6196)<=3684)) then v318=v99[v315-v195];v101[v315]=v318;break;end end break;end if ((v316==(1036 -(585 + 451))) or ((3206 + (4494 -2846))<=((23942 -11584) -(17164 -8739)))) then v317=0 + 0;v318=nil;v316=708 -(521 + 186);end end end break;end end break;end if ((v193==((0 -0) + 0)) or (1610>(12374 -8345))) then v194=0 -0;v195=nil;v193=1;end end end elseif (((1081 + 2967)>=(11086 -7704)) and (v104<=(7 + 2))) then if (((3600 -(14 + 1109))<=(4653 -881)) and (v101[v103[694 -(189 + 503)]]==v103[4 + 0])) then v85=v85 + (2 -1);else v85=v103[5 -2];end elseif ((v104==10) or ((2469 -1334)>=(7304 -3890))) then v101[v103[3 -1]]=v101[v103[418 -(171 + 244)]] + v101[v103[4]];else v101[v103[2]]=v101[v103[3 + 0]] * v101[v103[(1 -0) + 3]];end elseif (((2351 + 2032)==(3248 + 1135)) and (v104<=((10 + 74) -67))) then if ((1916<2988) and (v104<=(20 -6))) then if (((1402 + 1338)<=3214) and (v104<=12)) then v101[v103[(4 + 3) -5]]=v36(v96[v103[9 -6]],nil,v44);elseif ((v104>(12 + 1 + 0)) or ((7245 -3228)<3501)) then local v199=0 -0;local v200;local v201;local v202;while true do if ((1491<(131 + 2686)) and (v199==(1028 -(31 + 5 + 991)))) then v202=nil;while true do if (((1802 -((677 -495) + (2828 -(352 + 856))))==v200) or ((856 + (1542 -(127 + 988)))>=1612)) then local v295=0 + 0;local v296;while true do if ((((4642 + 65) -(18 + 36))>(295 + 669)) and ((0 -0)==v295)) then v296=574 -(437 + 137);while true do if ((v296==1) or ((1100 -(895 + 185))>(2317 -(54 + 12)))) then v200=1 + 0;break;end if (((10108 -6512)==(6854 -3258)) and (v296==(0 -0))) then local v378=1560 -(781 + 779);while true do if ((v378==(0 -0)) or ((2833 -1645)>(620 + 1289))) then v201=v103[1 + 1];v202={};v378=3 -2;end if ((v378==(2 -1)) or ((3567 -2329)<(428 -271))) then v296=1559 -(798 + 760);break;end end end end break;end end end if ((v200==(1929 -(237 + 1691))) or ((6643 -2099)<=(623 + 693))) then for v319=1 + 0, #v100 do local v320=1099 -(49 + (1494 -(356 + 88)));local v321;local v322;local v323;while true do if (((4060 -(259 + 71))>=(960 + 1002)) and (v320==(2 -(1 + 0)))) then v323=nil;while true do if ((622<4607) and (v321==(0 + 0))) then local v386=0 + 0;while true do if (((1093 -(126 + 357))<=((2035 + 944) -1910)) and (v386==0)) then v322=0 -0;v323=nil;v386=1 + 0;end if (((3518 + (2122 -1244))>488) and (v386==(1 + 0))) then v321=2 -1;break;end end end if ((v321==(1 -0)) or ((1097 + 698)>=(1045 + 1417))) then while true do if ((v322==(0 + 0)) or ((2399 -(307 + 101))>4116)) then v323=v100[v319];for v410=0 -0, #v323 do local v411=1860 -(1562 + 298);local v412;local v413;local v414;local v415;while true do if (((4839 -(239 + 123))>=(1698 + 1120)) and ((0 + 0)==v411)) then v412=0 -0;v413=nil;v411=1;end if (((1 + 0)==v411) or ((620 + 692)<(113 + 1012))) then v414=nil;v415=nil;v411=1 + 1;end if (((1139 + 3142)==(7052 -2771)) and ((4 -2)==v411)) then while true do if (((2806 -((831 -174) + 199))<=(3351 + 921)) and (v412==(0 + 0))) then local v443=0 + 0;while true do if (((1966 + 752)>=(2921 -(221 + 318))) and (v443==(1073 -(742 + 120 + 210)))) then v412=1 -0;break;end if (((3423 -2167)==(2234 -(293 + 685))) and ((0 + 0)==v443)) then v413=v323[v410];v414=v413[1];v443=2 -1;end end end if (((4586 -(92 + 49))<(4824 -(41 + 2))) and (v412==(326 -(177 + 148 + 0)))) then v415=v413[5 -(520 -(176 + 341))];if (((2057 -896)<((2542 + 779) -(30 + 661 + 214))) and (v414==v101) and (v415>=v201)) then local v450=0 -0;local v451;while true do if (((4550 -3253)<=(4326 + 191)) and (v450==(0 -(0 + 0)))) then v451=0 -0;while true do if ((v451==(1124 -(9 + 74 + 1041))) or (4783==((691 -(83 + 148)) -(43 + 36)))) then v202[v415]=v414[v415];v413[1 + 0]=v202;break;end end break;end end end break;end end break;end end end break;end end break;end end break;end if ((v320==0) or ((6708 -3416)==(2448 -((1232 -(205 + 679)) + 268)))) then v321=0 + 0;v322=nil;v320=2 -1;end end end break;end end break;end if ((v199==(1039 -(566 + 473))) or ((3683 -2623)>=(4145 + 281))) then v200=0;v201=nil;v199=3 -2;end end else v101[v103[3 -(1 + 0)]]=v44[v103[979 -(735 + 241)]];end elseif (((2722 -(533 + 950))<(3057 -((910 -499) + 210))) and (v104<=((9 -7) + 13))) then do return;end elseif ((v104>(1442 -(387 + 260 + 779))) or (797==((3837 -(361 + 380)) + (2394 -1335)))) then local v205=0 + (0 -0);local v206;local v207;local v208;local v209;local v210;while true do if ((v205==1) or ((3101 -2241)>(3957 -(753 + 1043)))) then v208=nil;v209=nil;v205=1 + 1;end if ((v205==(1 + 1)) or ((2505 + 51)==(4194 + 795))) then v210=nil;while true do if (((496 + 50)>=471) and (0==v206)) then local v297=0 + 0;while true do if (((3681 -(66 + 11))<(16244 -12044)) and ((0 + 0)==v297)) then v207=(0 -0) + 0;v208=nil;v297=3 -2;end if ((3671>(3952 -(914 + 143))) and ((1717 -(1310 + 406))==v297)) then v206=1811 -(369 + 1441);break;end end end if (((13987 -11038)>(3361 -((1415 -(553 + 22)) + 1147))) and (v206==(1935 -((1497 -(807 + 121)) + 1364)))) then while true do if ((v207==2) or ((4469 -(614 + 127 + 82))<=(1656 + 49))) then for v367=1160 -(929 + 230),v103[522 -((51 -37) + 504)] do local v368=1819 -(1806 + 13);local v369;local v370;while true do if (((0 -0)==v368) or ((1679 + 1407)<=((5884 -(152 + 33)) -3783))) then v369=618 -(428 + 190);v370=nil;v368=1716 -(1582 + (1566 -(569 + 864)));end if ((1911==(3412 -(150 + 1351))) and (v368==1)) then while true do if ((v369==0) or (2939<=(3293 -(273 + (939 -(707 + 105)))))) then local v403=(298 + 515) -(793 + 20);while true do if (((2012 -(411 + 795))<(4781 -(646 + 306))) and ((2 -1)==v403)) then v369=1 -0;break;end if ((v403==(0 -0)) or (((3575 + 3609) -(821 + 1998))<3630)) then local v427=(1774 -(93 + 108)) -(1166 + 407);while true do if ((v427==(2 -1)) or (3307<=(882 + 1936))) then v403=1;break;end if (((729 + 2383)>305) and (v427==(0 -0))) then v85=v85 + (535 -(162 + 372));v370=v95[v85];v427=2 -1;end end end end end if (((4737 -(138 + 681))<(3348 + 1023)) and (v369==1)) then if (((2599 + 185)==(4586 -(288 + 44 + 1470))) and (v370[2 -1]==31)) then v210[v367-(2 -1)]={v101,v370[3]};else v210[v367-(1 + 0 + 0)]={v43,v370[3]};end v100[ #v100 + 1 + (618 -(180 + 438))]=v210;break;end end break;end end end v101[v103[(1106 -(909 + 195)) + 0]]=v36(v208,v209,v44);break;end if (((4831 -(535 + 301 + 487))>(7484 -4569)) and (v207==(1 + 0))) then local v355=0;local v356;while true do if (((881 -(285 + 90))<(4440 -1926)) and (v355==0)) then v356=0 -0;while true do if ((4199>3085) and (v356==(487 -(156 + 330)))) then v207=888 -(52 + 834);break;end if (((6756 -2873)>(5019 -3223)) and (v356==(0 -0))) then local v400=0;while true do if ((v400==(0 + 0)) or ((6833 -2356)<(3431 -(1230 + 596)))) then v210={};v209=v10({},{__index=function(v428,v429)local v434=0 + 0;local v435;while true do if (((589 + 1400)==(3786 -1797)) and (((0 + 0) -0)==v434)) then v435=v210[v429];return v435[2 -1][v435[7 -5]];end end end,__newindex=function(v430,v431,v432)local v436=0 + 0;local v437;local v438;local v439;while true do if ((v436==(2 -1)) or ((323 + 1983)<=(271 + 293))) then v439=nil;while true do if (((539 + 2567)<=(14224 -10347)) and (v437==(1172 -(83 + 1089)))) then v438=0 + 0;v439=nil;v437=308 -(58 + (963 -(239 + 475)));end if ((679==(1021 -(64 + 278))) and (v437==(226 -(85 + 140)))) then while true do if (((296 + 57)>90) and (v438==(543 -(135 + 408)))) then v439=v210[v431];v439[1 -(0 -0)][v439[1 + 1]]=v432;break;end end break;end end break;end if (((419 + 1727 + 1811)==3957) and (v436==0)) then v437=624 -(587 + 37);v438=nil;v436=1 + 0 + 0;end end end});v400=119 -(17 + 91 + 10);end if ((v400==(3 -2)) or ((4765 -1685)==(8278 -3279))) then v356=1286 -(1236 + 49);break;end end end end break;end end end if ((v207==(0 + (0 -0))) or (351>=4214)) then local v357=0 -(826 -(73 + 753));local v358;while true do if ((4879>(2085 + 347)) and (v357==(1197 -(1163 + 34)))) then v358=0 + 0 + 0;while true do if (((2187 -(279 + 474))==(3241 -(914 + 893))) and (v358==(0 + 0))) then local v401=0;while true do if ((v401==(1 + 0 + 0)) or (908>(7294 -4030))) then v358=186 -(70 + 115);break;end if (((1896 + (3945 -(495 + 1182)))>(36 + 304 + 163)) and ((0 + 0)==v401)) then v208=v96[v103[(604 + 613) -(292 + 922)]];v209=nil;v401=(63 + 435) -(237 + 260);end end end if ((v358==(720 -(633 + 86))) or ((8639 -4766)<=76)) then v207=1579 -(382 + 1196);break;end end break;end end end end break;end if (((4658 -(508 + 1489))==(6312 -3651)) and (v206==(768 -(40 + 727)))) then local v298=0 + 0;while true do if (((3790 -2811)<=1370) and ((1150 -(114 + 1036))==v298)) then v209=nil;v210=nil;v298=977 -(96 + 880);end if ((v298==(1173 -(124 + 1048))) or (2281<=(4213 -2316))) then v206=1146 -(237 + 907);break;end end end end break;end if ((v205==(0 + 0)) or ((3 + 373)>(650 + 1516))) then v206=70 -(36 + 34);v207=nil;v205=1 -0;end end else v101[v103[1 + 1]][v103[664 -(565 + (1876 -(185 + 1595)))]]=v101[v103[1915 -(152 + (3624 -(1362 + 503)))]];end elseif ((v104<=((192 + 295) -(438 + 29))) or (616>=(7298 -4061))) then if ((1704<=((562 -(114 + 411)) + 3201)) and (v104<=18)) then v101[v103[1 + 1]]= #v101[v103[899 -(136 + (1602 -842))]];elseif (((250 + (1330 -(264 + 277)))==(504 + 32 + 369 + 134)) and (v104==(1 + 4 + 14))) then v101[v103[2]]();else local v213=67 -(50 + 17);local v214;local v215;local v216;local v217;while true do if ((1605<=(8018 -(4673 + 636))) and (v213==(1 + 0))) then v216=nil;v217=nil;v213=4 -2;end if (((473 + (1103 -671))>(539 + 310)) and (v213==0)) then v214=1552 -(669 + 7 + 876);v215=nil;v213=734 -(515 + 218);end if (((5315 -(229 + 381))>(713 -435)) and (v213==(4 -(3 -1)))) then while true do if ((v214==(0 + 0)) or (237>(4316 -(352 + 79 + 1029)))) then local v299=0 + 0;while true do if ((v299==(2 -1)) or ((1433 + 2365)==(1574 -508))) then v214=(3 -1) -1;break;end if ((4638>((4897 -(163 + 926)) -1371)) and (v299==(0 -0))) then v215=v103[2 + 0 + 0];v216={v101[v215](v13(v101,v215 + (2 -(1 + 0)),v86))};v299=1;end end end if ((v214==(2 -1)) or ((4839 -(823 + 245 + 80))<=(1285 + 1471))) then v217=0 -(0 -0);for v324=v215,v103[(11 -7) + 0] do local v325=0;local v326;while true do if ((((4278 -2994) + (4442 -3471))==2255) and ((0 + 0)==v325)) then v326=(0 -0) + 0;while true do if (((3575 + 39 + 1144)>(5252 -(752 + 395))) and (v326==(0 -0))) then v217=v217 + 1;v101[v324]=v216[v217];break;end end break;end end end break;end end break;end end end elseif (((2779 -749)<=(1682 + 2278)) and (v104<=(1446 -(1049 + 376)))) then if ((v101[v103[3 -1]]~=v101[v103[6 -2]]) or ((939 + (2026 -(67 + 790)))<1520)) then v85=v85 + 1;else v85=v103[1974 -(223 + 1748)];end elseif ((v104==(33 -11)) or ((13319 -9490)>(8258 -4091))) then local v219=0 + 0 + 0;local v220;local v221;local v222;local v223;local v224;local v225;while true do if ((v219==1) or ((2884 -((1479 -(692 + 530)) + 843))==3221)) then v222=nil;v223=nil;v219=402 -(72 + 328);end if (((1150 -(219 + 182 + 268))==((2769 -(158 + 416)) -(180 + 1534))) and (v219==0)) then v220=0 + 0;v221=nil;v219=337 -((57 -27) + 306);end if (((4399 -(331 + 635))>=2999) and ((1079 -(1043 + 16 + 17))==v219)) then while true do if ((v220==3) or ((3003 -(317 + 539))<(1148 -319))) then if (v225 or (1848<(6 + 134))) then local v348=0 -(0 + 0);local v349;while true do if ((((26075 -12262) -10141)>=(3731 -(30 + 108))) and (v348==(874 -(756 + 118)))) then v349=0 -0;while true do if ((v349==0) or ((2820 -2107)>=(670 + 3570))) then v101[v223]=v225;v85=v103[3 + 0];break;end end break;end end else v85=v85 + 1;end break;end if (((388 + 1182)<(4454 -(234 + 1173))) and (v220==(3 -2))) then local v300=0 -0;while true do if ((v300==(2 -1)) or (586<(134 + 154))) then v220=1348 -(641 + 705);break;end if ((2402<=(2354 + 1184)) and (v300==(0 + 0))) then v223=v221 + (1792 -(1298 + 492));v224={v101[v221](v101[v221 + (2 -1)],v101[v223])};v300=(427 -(267 + 159)) + 0;end end end if ((v220==(1288 -(497 + 789))) or ((1213 -508)==2437)) then for v327=2 -1,v222 do v101[v223 + v327]=v224[v327];end v225=v224[1];v220=1 + 0 + 2;end if ((v220==0) or ((4739 -(494 + 399))<=((397 -205) + 1446))) then local v302=1516 -(456 + 1060);while true do if (((5665 -(403 + 515))==(4839 -(58 + (1456 -(91 + 1331))))) and (v302==(1 + 0))) then v220=1 + 0;break;end if (((2344 -(568 + 895))<(2590 -(52 + 120))) and (v302==(0 + 0))) then v221=v103[2];v222=v103[4 -0];v302=1 -0;end end end end break;end if (((3361 -(114 + 39))==(4590 -(917 + 465))) and ((473 -(408 + (230 -167)))==v219)) then v224=nil;v225=nil;v219=3;end end else v101[v103[4 -2]]=v101[v103[3]] -v101[v103[12 -8]];end elseif ((v104<=(92 -57)) or ((45 + 64)>=(3301 + (1732 -1058)))) then if (((3437 -(1151 + 655))<=3675) and (v104<=(763 -(7 + 727)))) then if (((1306 + 2929)>=(4370 -(686 + 84))) and (v104<=(118 -92))) then if (((233 + 1356)>(38 -28)) and (v104<=(7 + 17))) then local v151=0 + (1193 -(901 + 292));local v152;local v153;local v154;while true do if (((4805 -(57 + 48))>(2107 -(980 + 525))) and (v151==1)) then v154=nil;while true do if ((v152==1) or ((2418 -(1041 + 601))>((3625 -(457 + 934)) + 2652))) then while true do if (((4438 -(206 + 128))>=(1336 -((2161 -(1083 + 855)) + 453))) and (v153==(0 + 0))) then v154=v103[7 -5];v101[v154]=v101[v154]();break;end end break;end if (((1164 -604)<(3942 -(1051 + 596 + 307))) and ((995 -(527 + 468))==v152)) then local v274=0 + 0;while true do if ((v274==(0 + 0)) or ((1962 + 2546)<=(2787 -1623))) then v153=0 + 0;v154=nil;v274=1;end if ((v274==((1455 -943) -(47 + 464))) or (3844<=(849 -(48 + 314)))) then v152=1 + 0;break;end end end end break;end if ((0==v151) or ((510 + 254)>=1260)) then v152=0 -0;v153=nil;v151=118 -(51 + 66);end end elseif (((3487 -(153 + 1125))<((29549 -20380) -5942)) and (v104==25)) then if (v101[v103[2 -(0 -0)]] or (520>=((4271 -(1241 + 28)) -(131 + 6)))) then v85=v85 + 1 + 0;else v85=v103[169 -(127 + 39)];end else local v227=551 -(457 + 94);local v228;local v229;local v230;while true do if ((v227==(0 + 0)) or (((389 + 2263) -(59 + 721))>(4634 -(435 + 1303)))) then v228=0;v229=nil;v227=1;end if ((v227==(1 + 0)) or (((11339 -7221) -(1767 + 15))>=(1708 + 925))) then v230=nil;while true do if ((v228==(1150 -(706 + 443))) or (2043>=(1588 + 1696))) then for v332=v229 + ((2845 -(905 + 728)) -(463 + 748)),v103[4] do v230=v230   .. v101[v332];end v101[v103[2]]=v230;break;end if (((0 + 0)==v228) or ((93 + 1433)>(3539 -(103 + 109)))) then v229=v103[8 -5];v230=v101[v229];v228=1;end end break;end end end elseif ((((6695 -3248) -(46 + 107))<=3480) and (v104<=(1403 -(1205 + 171)))) then local v155=894 -(281 + 613);local v156;local v157;local v158;while true do if (((11272 -7410)>(2695 -(297 + 53))) and ((1 + (0 -0))==v155)) then v158=nil;while true do if ((v156==(3 -2)) or ((1796 -(1378 + 168))==278)) then v101[v157 + (1801 -(370 + 1430))]=v158;v101[v157]=v158[v103[4]];break;end if ((v156==(0 + 0)) or (1039>=(1284 + 29))) then local v278=0;while true do if ((v278==(0 -0)) or ((16242 -(42961 -30200))<=(1086 + (643 -410)))) then v157=v103[192 -(166 + 24)];v158=v101[v103[884 -(401 + 480)]];v278=1166 -(235 + 930);end if ((v278==1) or (2913<=((391 -228) + 625))) then v156=1 + 0;break;end end end end break;end if ((((0 -0) -0)==v155) or (3203>(1670 + 3205))) then v156=1405 -(853 + 552);v157=nil;v155=1;end end elseif (((3516 -(692 + 811))>=(150 + 285)) and (v104==(18 + 10))) then for v260=v103[1444 -(998 + 444)],v103[314 -(301 + 10)] do v101[v260]=nil;end else v101[v103[2]][v103[3 + 0]]=v103[4 + 0];end elseif ((v104<=(481 -(36 + 413))) or ((142 + 33 + 54 + 6)==1759)) then if ((v104<=(42 -12)) or ((6251 -(1379 + 432))<=(3010 -958))) then do return v101[v103[7 -5]];end elseif ((((2887 + 698) -(779 + 1006))==(1424 + 376)) and (v104==(88 -57))) then v101[v103[1 + 1]]=v101[v103[(23 -13) -7]];else v101[v103[1964 -((3529 -(932 + 954)) + (903 -(101 + 483)))]]=v103[6 -(3 + 0)];end elseif (((9345 -6754)==2591) and (v104<=(106 -73))) then v44[v103[127 -((329 -210) + 5)]]=v101[v103[2 -0]];elseif (((3633 -(763 + 406))>=(35 + 1572)) and (v104==(668 -(612 + 22)))) then v101[v103[1980 -(205 + 1773)]]=v101[v103[3]][v101[v103[1681 -(308 + (2900 -(271 + 1260)))]]];else local v239=(0 + 0) -0;local v240;local v241;while true do if ((v239==(620 -(113 + 506))) or ((816 + 195)>=(7386 -(18182 -13586)))) then while true do if ((2006>=(492 + (232 -121))) and (v240==0)) then v241=v103[1698 -((927 -(320 + 522)) + 1611)];v101[v241]=v101[v241](v13(v101,v241 + 1 + 0,v86));break;end end break;end if ((v239==(0 -0)) or ((78 + 196)>(1440 -689))) then v240=0 + 0;v241=nil;v239=(3589 -(1123 + 720)) -(1327 + 418);end end end elseif ((v104<=(1668 -(361 + 1266))) or (4296<=(3288 -2172))) then if (((7548 -4171)==(4747 -((626 -400) + 1144))) and (v104<=(1050 -(651 + 273 + 88)))) then if ((v104<=((3517 -(828 + 1034)) -(1247 + 372))) or (((5253 -3370) + 598)==(1353 + 1798))) then local v161=0 -(695 -(91 + 604));local v162;local v163;local v164;local v165;local v166;while true do if (((588 + 728)<(12116 -9065)) and ((1 + 0)==v161)) then v164=nil;v165=nil;v161=(5769 -3874) -(550 + 1343);end if ((v161==(0 -0)) or ((1360 + 274)<=(1410 -(1965 -(762 + 156))))) then v162=0;v163=nil;v161=3 -2;end if ((v161==(1453 -(1178 + 273))) or ((2869 -(928 + 206))>=(11713 -7286))) then v166=nil;while true do if (((904 -(325 + 578))==v162) or (543==(5714 -4074))) then local v279=0;while true do if (((739 -(429 + 310))==v279) or ((5988 -3276)==(4239 -(55 + 552)))) then v165=nil;v166=nil;v279=851 -(222 + 628);end if ((v279==((1 + 0) -0)) or ((121 + 2641)<(5259 -(9286 -5953)))) then v162=2;break;end end end if (((5683 -(963 + 776))>(1435 + 838)) and (v162==(1117 -(666 + 449)))) then while true do if (((53 + 3552)>=(3780 -1488)) and (v163==(3 -2))) then v166=v101[v164 + (147 -(55 + 90))];if ((v166>(0 -0)) or ((1265 + 298)<=(1505 -(4 + 1490)))) then if (((744 + (1568 -(206 + 1161)))==((221 + 1665) -941)) and (v165>v101[v164 + (2 -(2 -1))])) then v85=v103[1832 -(541 + 1288)];else v101[v164 + (495 -((928 -459) + 23))]=v165;end elseif ((v165<v101[v164 + (2 -1)]) or ((3267 -((339 -141) + 692))<(271 + 580))) then v85=v103[3];else v101[v164 + (1746 -(1677 + 66))]=v165;end break;end if ((v163==(0 -0)) or ((6071 -(651 + 1330))<2271)) then local v336=0;local v337;while true do if ((3113>=485) and (v336==(0 + 0))) then v337=0 -0;while true do if ((496<2628) and (v337==(0 -0))) then local v389=0 -0;while true do if ((v389==(641 -(237 + 403))) or ((1551 -(401 + 256))>(5630 -(1139 + 368)))) then v337=598 -(164 + 433);break;end if ((2495<(2489 + 1586)) and (v389==0)) then v164=v103[2 -0];v165=v101[v164];v389=2 -1;end end end if (((8502 -3769)>(6363 -2396)) and (v337==(2 -1))) then v163=1 + 0;break;end end break;end end end end break;end if (((1307 -(529 + 778))==v162) or ((3809 + 931)<(3916 -(37 + (1611 -(633 + 917)))))) then local v280=0 -(0 -0);while true do if ((v280==(2 -1)) or ((76 -34)>(45 + 58))) then v162=2 -1;break;end if ((v280==(338 -(278 + 60))) or (4687==(307 + 111))) then v163=676 -(327 + 349);v164=nil;v280=2 -1;end end end end break;end end elseif ((v104>((234 -(99 + 35)) -63)) or (1857>1921)) then v101[v103[1 + 1 + 0]]=v43[v103[2 + 1]];else v43[v103[9 -6]]=v101[v103[1 + 1]];end elseif ((1280<=(11405 -7689)) and (v104<=(29 + 10))) then local v167=0 + 0;local v168;local v169;local v170;local v171;local v172;while true do if ((((15939 -11336) -1914)<=(7259 -3038)) and ((3 -2)==v167)) then v170=nil;v171=nil;v167=6 -4;end if ((v167==(205 -(163 + 42))) or (1628>=3896)) then v168=0 + 0 + 0;v169=nil;v167=3 -2;end if (((758 -(21 + 93))<(1103 + 3400)) and (v167==(1484 -(212 + 1270)))) then v172=nil;while true do if ((v168==(3 -1)) or ((4744 -(169 + 262))<3281)) then for v289=v169,v86 do local v290=0 + 0;local v291;while true do if (((12468 -7938)==(6137 -(184 + 1423))) and ((236 -(176 + 60))==v290)) then v291=0 + 0;while true do if ((v291==(1037 -(317 + 720))) or ((4492 + 257)<=(3525 -2550))) then v172=v172 + (1287 -((3291 -2131) + 126));v101[v289]=v170[v172];break;end end break;end end end break;end if (((4 -3)==v168) or ((376 + 1044)==(11630 -8872))) then local v281=0 -0;while true do if ((v281==(1123 -(657 + 466))) or ((1556 -(162 + 33))<=(265 + 89))) then v86=(v171 + v169) -((1 + 0) -0);v172=0 + 0;v281=1 + 0;end if (((1943 -877)<=(9992 -5711)) and (v281==(1 -0))) then v168=919 -(833 + 84);break;end end end if ((v168==(0 -0)) or ((1175 -(116 + 780))>(5803 -4259))) then v169=v103[467 -(53 + 412)];v170,v171=v98(v101[v169](v101[v169 + 1 + 0]));v168=2 -1;end end break;end end elseif ((((6025 -(249 + 1548)) -(28 + 1177))>=(559 -171)) and (v104>(38 + 2))) then local v246=0 + 0;local v247;local v248;while true do if (((14341 -(7725 + 2480))>2061) and (v246==0)) then v247=0 -0;v248=nil;v246=1 + 0;end if ((v246==(2 -1)) or (4588<=(7065 -4212))) then while true do if ((v247==(0 -0)) or (((343 -241) -(1481 -(261 + 1179)))>=(771 -(218 + 148)))) then v248=v103[2 + 0];v101[v248](v101[v248 + (3 -2)]);break;end end break;end end else local v249=0 -0;local v250;local v251;local v252;while true do if (((15252 -10794)>(1150 -(25 + 168 + 362))) and (v249==(2 -1))) then v252=nil;while true do if ((v250==(0 + 0)) or (((10465 -(324 + 741)) -4980)==(786 + 899))) then v251=1703 -(306 + 1397);v252=nil;v250=1 -0;end if ((v250==(500 -(373 + 126))) or (((6468 -(881 + 658)) + 25)<=(1396 + 668))) then while true do if ((v251==(705 -(638 + 67))) or (2324>(65 + 2567))) then v252=v103[2];do return v13(v101,v252,v252 + v103[879 -(653 + 223)]);end break;end end break;end end break;end if ((v249==0) or ((2024 -(999 + 854))>(73 + 978))) then v250=(0 + 0) -0;v251=nil;v249=1;end end end elseif ((v104<=(24 + 20)) or ((3822 + 705)<=((4655 -(486 + 182)) -(706 + 24)))) then if ((2559>=(2721 -(875 + 1117))) and (v104<=(2 + 40))) then local v173=0 -0;local v174;while true do if ((v173==(0 -0)) or ((3765 + 876)<4017)) then v174=v103[2];v101[v174]=v101[v174](v13(v101,v174 + (2 -(2 -1)),v103[1 + 2]));break;end end elseif ((v104>((1695 + 70) -(1044 + 678))) or ((799 -(509 + 97))>=(2976 + 315))) then local v253=0 + 0;local v254;local v255;while true do if (((5140 -((96 -46) + 102))>=((4302 -2488) + 2134)) and (v253==(127 -(65 + 62)))) then local v267=0 + 0;while true do if ((1470<(3461 -(60 + 4))) and (v267==(54 -(35 + 18)))) then v253=1 + (1523 -(1163 + 360));break;end if (((4881 -(212 + 226))>=7) and (v267==(0 -0))) then v254=1889 -(1276 + 613);v255=nil;v267=1927 -(1217 + 709);end end end if (((2981 -(256 + 662))<=(2857 + 1264)) and (v253==(436 -(330 + 105)))) then while true do if (((1931 + 1042)<(4196 -(67 + 50))) and (v254==(0 + 0))) then v255=v103[2];v101[v255](v13(v101,v255 + 1 + 0,v103[2 + 1]));break;end end break;end end else local v256=0;local v257;while true do if ((v256==(0 -0)) or (((10387 -4349) -4649)>(16721 -13188))) then v257=v103[2 -(0 -0)];do return v13(v101,v257,v86);end break;end end end elseif ((v104<=(8 + 37)) or (2629==(451 + (879 -439)))) then v101[v103[1939 -(1280 + 657)]]={};elseif (((12591 -7873)>=(4357 -(865 + 167))) and (v104==(18 + 28))) then if (((1492 -(912 + 141))==(1375 -(679 + 257))) and (v101[v103[2]]~=v103[392 -(183 + 205)])) then v85=v85 + 1;else v85=v103[(230 -183) -(31 + 13)];end else v101[v103[1985 -(888 + 1095)]]=v103[3]~=(308 -(62 + 246));end v85=v85 + (2 -1);break;end if (((0 + 0)==v109) or ((499 + 341 + 619)>=(4414 -(105 + 180)))) then local v124=0;local v125;while true do if (((1483 -1155)<=2860) and (v124==(0 -0))) then v125=1752 -(637 + 472 + 643);while true do if ((4794==(6263 -(1121 + 348))) and (v125==(0 + 0))) then v103=v95[v85];v104=v103[1 + 0];v125=3 -2;end if ((v125==(1 + 0)) or ((19 + 213)>=(12923 -8426))) then v109=1 + 0;break;end end break;end end end end break;end end break;end if (((3812 -(399 + 634))>(24 -17)) and (v107==0)) then v108=0 + 0;v109=nil;v107=1 + 0;end end end end A,B=v34(v11(v89));if  not A[1] then local v105=v42[4][v85] or "?";error("Script error at ["   .. v105   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end if (v70==0) then v71=v42[1];v72=v42[2];v70=1;end end end return v36(v35(),{},v24)(...);end;vv9(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end
